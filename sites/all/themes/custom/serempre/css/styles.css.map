{"version":3,"sources":["base/_fonts.scss","styles.css","base/_root.scss","../node_modules/typey/stylesheets/typey/mixins/_typeface.scss","init/_variables.scss","../node_modules/typey/stylesheets/typey/mixins/_define-type-sizing.scss","../node_modules/typey/stylesheets/typey/_defaults.scss","../node_modules/typey/stylesheets/typey/mixins/_font-size.scss","../node_modules/typey/stylesheets/typey/functions/_helpers.scss","init/_colors.scss","base/_html5.scss","base/links/_links.scss","base/headings/_headings.scss","../node_modules/typey/stylesheets/typey/mixins/_line-height.scss","../node_modules/typey/stylesheets/typey/mixins/_spacing.scss","base/text/_text.scss","base/embedded/_embedded.scss","base/tables/_tables.scss","page/_welcome.scss","../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","page/_story-about.scss","page/_facts.scss","abstracts/_placeholders.scss","layout/_header.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["// Font faces\n//\n// Instead of relying on the fonts that are available on a user's computer, you\n// can use web fonts which, like images, are resources downloaded to the user's\n// browser. Because of the bandwidth and rendering resources required, web fonts\n// should be used with care.\n//\n// Numerous resources for web fonts can be found on Google. Here are a few\n// websites where you can find Open Source fonts to download:\n// - http://www.fontsquirrel.com/fontface\n// - http://www.theleagueofmoveabletype.com\n//\n// In order to use these fonts, you will need to convert them into formats\n// suitable for web fonts. We recommend the free-to-use Font Squirrel's\n// Font-Face Generator:\n//   http://www.fontsquirrel.com/fontface/generator\n//\n// The following is an example @font-face declaration. This font can then be\n// used in any ruleset using a property like this:  font-family: Example, serif;\n//\n// Since we're using Sass, you'll need to declare your font faces here, then you\n// can add them to the font variables in the _init.scss partial.\n\n// @font-face {\n//     font-family: 'roboto_condensedregular';\n//     src: url('../fonts/Roboto/robotocondensed-regular-webfont.woff2') format('woff2'),\n//          url('../fonts/Roboto/robotocondensed-regular-webfont.woff') format('woff');\n//     font-weight: normal;\n//     font-style: normal;\n// }\n\n$font-primary:       '../fonts/Roboto_Mono' !default;\n$font-secondary:     '../fonts/Rubik' !default;\n\n@font-face {\n    font-family: 'RobotoMono-Bold';\n    src: url('#{$font-primary}/RobotoMono-Bold.ttf') format('truetype');\n    // src: url('#{$font-primary}/crimsontext-bold-webfont.woff2') format('woff2'),\n    // url('#{$font-primary}/crimsontext-bold-webfont.woff') format('woff');\n    // font-weight: bold;\n    // font-style: normal;\n}\n\n@font-face {\n    font-family: 'RobotoMono-BoldItalic';\n    src: url('#{$font-primary}/RobotoMono-BoldItalic.ttf') format('truetype');\n    // src: url('#{$font-primary}/crimsontext-bold-webfont.woff2') format('woff2'),\n    // url('#{$font-primary}/crimsontext-bold-webfont.woff') format('woff');\n    // font-weight: bold;\n    // font-style: normal;\n}\n\n@font-face {\n    font-family: 'RobotoMono-Italic';\n    src: url('#{$font-primary}/RobotoMono-Italic.ttf') format('truetype');\n    // font-weight: bold;\n    // font-style: normal;\n}\n\n@font-face {\n    font-family: 'RobotoMono-Light';\n    src: url('#{$font-primary}/RobotoMono-Light.ttf') format('truetype');\n    // font-weight: bold;\n    // font-style: normal;\n}\n\n@font-face {\n    font-family: 'RobotoMono-LightItalic';\n    src: url('#{$font-primary}/RobotoMono-LightItalic.ttf') format('truetype');\n    // font-weight: bold;\n    // font-style: normal;\n}\n@font-face {\n    font-family: 'RobotoMono-Regular';\n    src: url('#{$font-primary}/RobotoMono-Regular.ttf') format('truetype');\n    // font-weight: bold;\n    // font-style: normal;\n}\n\n\n\n@font-face {\n  font-family: 'Rubik-Black';\n  src: url('#{$font-secondary}/Rubik-Black.ttf') format('truetype');\n  // src: url('#{$font-secondary}/lato-bold-webfont.woff2') format('woff2'),\n  // url('#{$font-secondary}/lato-bold-webfont.woff') format('woff');\n  // font-weight: 700;\n  // font-style: normal;\n}\n\n@font-face {\n  font-family: 'Rubik-Bold';\n  src: url('#{$font-secondary}/Rubik-Bold.ttf') format('truetype');\n  // src: url('#{$font-secondary}/lato-bold-webfont.woff2') format('woff2'),\n  // url('#{$font-secondary}/lato-bold-webfont.woff') format('woff');\n  // font-weight: 700;\n  // font-style: normal;\n}\n\n@font-face {\n  font-family: 'Rubik-Regular';\n  src: url('#{$font-secondary}/Rubik-Regular.ttf') format('truetype');\n  // font-weight: bold;\n  // font-style: normal;\n}\n\n@font-face {\n  font-family: 'Rubik-Light';\n  src: url('#{$font-secondary}/Rubik-Light.ttf') format('truetype');\n  // font-weight: bold;\n  // font-style: normal;\n}\n\n\n\n// Icons ADC\n// $icomoon-font-path: '../fonts/Icons' !default;\n\n\n// @font-face {\n//   font-family: 'icoadc';\n//   src:  url('#{$icomoon-font-path}/icoadc.eot?1xqduc');\n//   src:  url('#{$icomoon-font-path}/icoadc.eot?1xqduc#iefix') format('embedded-opentype'),\n//     url('#{$icomoon-font-path}/icoadc.ttf?1xqduc') format('truetype'),\n//     url('#{$icomoon-font-path}/icoadc.woff?1xqduc') format('woff'),\n//     url('#{$icomoon-font-path}/icoadc.svg?1xqduc#icoadc') format('svg');\n//   font-weight: normal;\n//   font-style: normal;\n// }\n\n// [class^='icon-'],\n// [class*='icon-'] {\n//   /* use !important to prevent issues with browser extensions that change fonts */\n//   font-family: 'icoadc' !important;\n//   speak: none;\n//   font-style: normal;\n//   font-weight: normal;\n//   font-variant: normal;\n//   text-transform: none;\n//   line-height: 1;\n\n//   /* Better Font Rendering =========== */\n//   -webkit-font-smoothing: antialiased;\n//   -moz-osx-font-smoothing: grayscale;\n// }\n\n// .icon-twitter .path1:before {\n//   content: '\\e92c';\n//   color: rgb(29, 29, 27);\n// }\n\n// .icon-twitter .path2:before {\n//   content: '\\e92d';\n//   margin-left: -1em;\n//   color: rgb(255, 255, 255);\n// }\n\n// .icon-twitter-default:before {\n//   content: '\\e92c';\n// }\n\n// .icon-foro-2:before {\n//   content: '\\e92e';\n// }\n\n// .icon-chat:before {\n//   content: '\\e92f';\n// }\n\n// .icon-biblioteca:before {\n//   content: '\\e930';\n// }\n\n// .icon-libro:before {\n//   content: '\\e931';\n// }\n\n// .icon-menu:before {\n//   content: '\\e900';\n// }\n\n// .icon-punto:before {\n//   content: '\\e901';\n// }\n\n// .icon-calendario-2:before {\n//   content: '\\e902';\n// }\n\n// .icon-images:before {\n//   content: '\\e903';\n// }\n\n// .icon-tool:before {\n//   content: '\\e904';\n// }\n\n// .icon-docu:before {\n//   content: '\\e905';\n// }\n\n// .icon-agregar:before {\n//   content: '\\e906';\n// }\n\n// .icon-editar:before {\n//   content: '\\e907';\n// }\n\n// .icon-email-2:before {\n//   content: '\\e908';\n// }\n\n// .icon-calendario:before {\n//   content: '\\e909';\n// }\n\n// .icon-telefono:before {\n//   content: '\\e90a';\n// }\n\n// .icon-email:before {\n//   content: '\\e90b';\n// }\n\n// .icon-ok-doc:before {\n//   content: '\\e90c';\n// }\n\n// .icon-buscar-doc:before {\n//   content: '\\e90d';\n// }\n\n// .icon-perfil:before {\n//   content: '\\e90e';\n// }\n\n// .icon-actualizar:before {\n//   content: '\\e90f';\n// }\n\n// .icon-carrito:before {\n//   content: '\\e910';\n// }\n\n// .icon-cerrar:before {\n//   content: '\\e911';\n// }\n\n// .icon-pregunta:before {\n//   content: '\\e912';\n// }\n\n// .icon-ok:before {\n//   content: '\\e913';\n// }\n\n// .icon-document:before {\n//   content: '\\e914';\n// }\n\n// .icon-link:before {\n//   content: '\\e915';\n// }\n\n// .icon-play:before {\n//   content: '\\e916';\n// }\n\n// .icon-book:before {\n//   content: '\\e917';\n// }\n\n// .icon-mensaje:before {\n//   content: '\\e918';\n// }\n\n// .icon-ayuda:before {\n//   content: '\\e919';\n// }\n\n// .icon-education:before {\n//   content: '\\e91a';\n// }\n\n// .icon-herramientas:before {\n//   content: '\\e91b';\n// }\n\n// .icon-felcha:before {\n//   content: '\\e91c';\n// }\n\n// .icon-buscar:before {\n//   content: '\\e91d';\n// }\n\n// .icon-home:before {\n//   content: '\\e91e';\n// }\n\n// .icon-recurso-1:before {\n//   content: '\\e91f';\n// }\n\n// .icon-facebook:before {\n//   content: '\\e920';\n// }\n\n// .icon-ver-más:before {\n//   content: '\\e921';\n// }\n\n// .icon-ayuda-2:before {\n//   content: '\\e922';\n// }\n\n// .icon-rss:before {\n//   content: '\\e923';\n// }\n\n// .icon-instagram-default {\n//   content: '\\e924';\n// }\n\n// .icon-instagram .path1:before {\n//   content: '\\e924';\n//   color: rgb(66, 66, 66);\n// }\n\n// .icon-instagram .path2:before {\n//   content: '\\e925';\n//   margin-left: -1em;\n//   color: rgb(255, 255, 255);\n// }\n\n// .icon-instagram .path3:before {\n//   content: '\\e926';\n//   margin-left: -1em;\n//   color: rgb(255, 255, 255);\n// }\n\n// .icon-instagram .path4:before {\n//   content: '\\e927';\n//   margin-left: -1em;\n//   color: rgb(255, 255, 255);\n// }\n\n// .icon-pinterest:before {\n//   content: '\\e928';\n// }\n\n// .icon-alerta-mail:before {\n//   content: '\\e929';\n// }\n\n// .icon-foros:before {\n//   content: '\\e92a';\n// }\n\n// .icon-chat2:before {\n//   content: '\\e92b';\n// }\n\n","@font-face {\n  font-family: 'RobotoMono-Bold';\n  src: url(\"../fonts/Roboto_Mono/RobotoMono-Bold.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: 'RobotoMono-BoldItalic';\n  src: url(\"../fonts/Roboto_Mono/RobotoMono-BoldItalic.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: 'RobotoMono-Italic';\n  src: url(\"../fonts/Roboto_Mono/RobotoMono-Italic.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: 'RobotoMono-Light';\n  src: url(\"../fonts/Roboto_Mono/RobotoMono-Light.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: 'RobotoMono-LightItalic';\n  src: url(\"../fonts/Roboto_Mono/RobotoMono-LightItalic.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: 'RobotoMono-Regular';\n  src: url(\"../fonts/Roboto_Mono/RobotoMono-Regular.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: 'Rubik-Black';\n  src: url(\"../fonts/Rubik/Rubik-Black.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: 'Rubik-Bold';\n  src: url(\"../fonts/Rubik/Rubik-Bold.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: 'Rubik-Regular';\n  src: url(\"../fonts/Rubik/Rubik-Regular.ttf\") format(\"truetype\");\n}\n\n@font-face {\n  font-family: 'Rubik-Light';\n  src: url(\"../fonts/Rubik/Rubik-Light.ttf\") format(\"truetype\");\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  font-family: \"RobotoMono-Regular\", \"Arial Narrow\", Helvetica, sans-serif;\n  font-size: 100%;\n  line-height: 1.5;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  min-height: 100%;\n}\n\nbody {\n  font-family: \"RobotoMono-Regular\", \"Arial Narrow\", Helvetica, sans-serif;\n  font-size: 0.875rem;\n  color: #484851;\n  background-color: #fff;\n  margin: 0;\n  padding: 0;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n}\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\nprogress {\n  vertical-align: baseline;\n}\n\ntemplate,\n[hidden] {\n  display: none;\n}\n\na {\n  color: #484851;\n  -webkit-text-decoration-skip: objects;\n}\n\na:active {\n  color: #484851;\n}\n\na:active:not(.button) {\n  background-color: transparent;\n}\n\na:active,\na:hover {\n  outline-width: 0;\n}\n\n@media print {\n  :link,\n  :visited {\n    text-decoration: underline;\n  }\n  a[href]:after {\n    content: \" (\" attr(href) \")\";\n    font-weight: normal;\n    font-size: 16px;\n    text-decoration: none;\n  }\n  a[href^='javascript:']:after,\n  a[href^='#']:after {\n    content: '';\n  }\n}\n\nh1 {\n  font-size: 1.9375rem;\n  line-height: 2;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\nh2 {\n  font-size: 1.5rem;\n  line-height: 1.5;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\nh3 {\n  font-size: 1.1875rem;\n  line-height: 1.5;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\nh4 {\n  font-size: 1rem;\n  line-height: 1;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\nh5 {\n  font-size: 0.875rem;\n  line-height: 1;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\nh6 {\n  font-size: 0.8125rem;\n  line-height: 1;\n  margin-top: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\nabbr[title] {\n  border-bottom: 0;\n  text-decoration: underline;\n  text-decoration: underline dotted;\n}\n\n@media print {\n  abbr[title]:after {\n    content: \" (\" attr(title) \")\";\n  }\n}\n\nb,\nstrong {\n  font-weight: inherit;\n}\n\nstrong,\nb {\n  font-weight: bolder;\n}\n\n\ncode,\nkbd,\nsamp,\nvar {\n  font-family: Menlo, \"DejaVu Sans Mono\", \"Ubuntu Mono\", Courier, \"Courier New\", monospace, sans-serif;\n  font-size: 1em;\n}\n\ndfn {\n  font-style: italic;\n}\n\nmark {\n  background-color: #ffea00;\n  color: #484851;\n}\n\nsmall {\n  font-size: 0.875rem;\n}\n\nsub,\nsup {\n  font-size: 0.8125rem;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -.25em;\n}\n\nsup {\n  top: -.5em;\n}\n\nimg {\n  border-style: none;\n}\n\nimg,\nsvg {\n  max-width: 100%;\n  height: auto;\n}\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\ntable {\n  margin: 1.5rem 0;\n  border-collapse: collapse;\n  border-spacing: 0;\n  width: 100%;\n}\n\ntd,\nth {\n  padding: 0;\n}\n\n/*\n//------------------------------------------------------------------------------\n// Home Views Welcome\n//------------------------------------------------------------------------------\n*/\n.view-welcome {\n  position: relative;\n}\n\n.view-welcome .Banner-welcome .views-field-field-baner-desktop {\n  display: none;\n}\n\n@media (min-width: 666px) {\n  .view-welcome .Banner-welcome .views-field-field-baner-desktop {\n    display: block;\n  }\n}\n\n@media (min-width: 666px) {\n  .view-welcome .Banner-welcome .views-field-field-banner-mobil {\n    display: none;\n  }\n}\n\n.view-welcome .Banner-welcome .Banner-box {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  max-width: 700px;\n  transform: translate3d(-50%, -50%, 0px);\n}\n\n@media (min-width: 992px) {\n  .view-welcome .Banner-welcome .Banner-box {\n    max-width: 700px;\n  }\n}\n\n.view-welcome .Banner-welcome .Banner-box p {\n  font-family: \"Rubik-Regular\", \"Arial Narrow\", Helvetica, sans-serif;\n  font-size: 1rem;\n  color: white;\n  text-align: center;\n}\n\n@media (min-width: 992px) {\n  .view-welcome .Banner-welcome .Banner-box p {\n    font-size: 1.5rem;\n  }\n}\n\n.view-welcome .Banner-welcome .Banner-box h1 {\n  font-family: \"Rubik-Black\", \"Arial Narrow\", Helvetica, sans-serif;\n  color: white;\n  line-height: 0.93;\n  text-transform: uppercase;\n  text-align: center;\n}\n\n@media (min-width: 768px) {\n  .view-welcome .Banner-welcome .Banner-box h1 {\n    font-size: 1.5rem;\n  }\n}\n\n@media (min-width: 888px) {\n  .view-welcome .Banner-welcome .Banner-box h1 {\n    font-size: 2.6875rem;\n  }\n}\n\n@media (min-width: 992px) {\n  .view-welcome .Banner-welcome .Banner-box h1 {\n    font-size: 50px;\n  }\n}\n\n@media (min-width: 1200px) {\n  .view-welcome .Banner-welcome .Banner-box h1 {\n    font-size: 80px;\n  }\n}\n\n.view-welcome .Banner-welcome .Banner-box .views-field-view-node a {\n  width: 100%;\n  display: block;\n  font-family: \"Rubik-Regular\", \"Arial Narrow\", Helvetica, sans-serif;\n  font-size: 0.875rem;\n  color: #fff;\n  text-align: center;\n  text-transform: uppercase;\n  line-height: 1.2;\n  padding: 1.0em .7em;\n  border: 3px solid #fff;\n  max-width: 150px;\n  margin: 0px auto;\n}\n\n/*\n//------------------------------------------------------------------------------\n// Home story about\n//------------------------------------------------------------------------------\n*/\n.view-story-about-us {\n  margin: 150px 0px;\n}\n\n.view-story-about-us .title p {\n  font-size: 1.5rem;\n  font-family: \"RobotoMono-Regular\", \"Arial Narrow\", Helvetica, sans-serif;\n  color: #333333;\n  text-transform: uppercase;\n  line-height: 1.2;\n  text-align: center;\n}\n\n.view-story-about-us .sub-titulo h2 {\n  font-size: 2.5rem;\n  font-family: \"Rubik-Black\", \"Arial Narrow\", Helvetica, sans-serif;\n  color: #333333;\n  text-transform: uppercase;\n  line-height: 1.2;\n  text-align: center;\n}\n\n.view-story-about-us .descripcions {\n  font-size: 0.9375rem;\n  font-family: \"RobotoMono-Regular\", \"Arial Narrow\", Helvetica, sans-serif;\n  color: #999999;\n  line-height: 1.6;\n  text-align: center;\n  margin: 51px 0px;\n}\n\n.view-story-about-us .views-row {\n  max-width: 450px;\n}\n\n@media (min-width: 768px) {\n  .view-story-about-us .views-row {\n    max-width: initial;\n  }\n}\n\n.view-story-about-us .wrapper-img {\n  position: relative;\n  margin-bottom: 15px;\n}\n\n.view-story-about-us .wrapper-img .views-field-field-imagen-layout .field-content {\n  width: 100%;\n}\n\n.view-story-about-us .wrapper-img .views-field-field-imagen-layout .field-content img {\n  width: 100%;\n}\n\n.view-story-about-us .wrapper-img .wrapper-box {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate3d(-50%, -50%, 0px);\n  z-index: -1;\n}\n\n.view-story-about-us .wrapper-img .wrapper-box .icons-layout img {\n  margin: 0 auto;\n}\n\n.view-story-about-us .wrapper-img .wrapper-box .text-layout {\n  font-size: 1.125rem;\n  font-family: \"Rubik-Black\", \"Arial Narrow\", Helvetica, sans-serif;\n  color: #fff;\n  text-transform: uppercase;\n  line-height: 1.2;\n  text-align: center;\n}\n\n.view-story-about-us .wrapper-img:hover {\n  box-shadow: -16px 16px 7px rgba(0, 0, 0, 0.2);\n}\n\n.view-story-about-us .wrapper-img:hover::before {\n  content: '';\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(23, 156, 215, 0.71);\n  z-index: 1;\n  transform: scale(1.05, 1.05);\n}\n\n.view-story-about-us .wrapper-img:hover .views-field-field-imagen-layout img {\n  transform: scale(1.05, 1.05);\n  transition: all 0.25s ease-in-out;\n}\n\n.view-story-about-us .wrapper-img:hover .wrapper-box {\n  z-index: 1;\n}\n\n/*\n//------------------------------------------------------------------------------\n// Home Views Facts\n//------------------------------------------------------------------------------\n*/\n.view-facts {\n  background-color: #009ddf;\n}\n\n.view-facts ul {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 0px;\n}\n\n.view-facts ul .views-row {\n  flex: 1 1 50%;\n  list-style: none;\n  padding: 0px;\n  padding-top: 35px;\n  padding-bottom: 35px;\n}\n\n@media (min-width: 992px) {\n  .view-facts ul .views-row {\n    flex: 1 1 0px;\n    border-right: 1px solid #4dbbe9;\n    border-left: 1px solid #4dbbe9;\n  }\n}\n\n.view-facts ul .views-row .views-field-name {\n  font-size: 1.4375rem;\n  font-family: \"Rubik-Black\", \"Arial Narrow\", Helvetica, sans-serif;\n  color: white;\n  text-transform: uppercase;\n  line-height: 1.2;\n  text-align: center;\n  margin-bottom: 5px;\n}\n\n@media (min-width: 768px) {\n  .view-facts ul .views-row .views-field-name {\n    font-size: 1.9375rem;\n  }\n}\n\n@media (min-width: 992px) {\n  .view-facts ul .views-row .views-field-name {\n    font-size: 4.5rem;\n  }\n}\n\n.view-facts ul .views-row .views-field-description {\n  font-size: 0.875rem;\n  font-family: \"Rubik-Regular\", \"Arial Narrow\", Helvetica, sans-serif;\n  color: white;\n  text-transform: uppercase;\n  line-height: 1.2;\n  text-align: center;\n}\n\n/*\n//------------------------------------------------------------------------------\n// Menu\n//------------------------------------------------------------------------------\n*/\nbody.navbar-is-fixed-top {\n  padding: 0px !important;\n}\n\n.main-container.container {\n  width: 100% !important;\n  padding: 0px !important;\n}\n\n.navbar-default {\n  background-color: transparent;\n  border: none;\n  margin: 0px;\n}\n\n/*\n//------------------------------------------------------------------------------\n// Menu\n//------------------------------------------------------------------------------\n*/\n.navbar-collapse.in {\n  background-color: #494a4a5c;\n}\n\n@media (min-width: 768px) {\n  .navbar-collapse.in {\n    background-color: transparent;\n  }\n}\n\n.navbar-header {\n  background-color: #494a4a5c;\n}\n\n@media (min-width: 768px) {\n  .navbar-header {\n    background-color: transparent;\n  }\n}\n\n.navbar-header .navbar-brand {\n  height: 40px;\n  padding: 10px 15px;\n  font-family: \"Rubik-Light\", \"Arial Narrow\", Helvetica, sans-serif;\n  line-height: 1.2;\n  color: #fff;\n}\n\n.navbar-toggle {\n  border-radius: 0px;\n  border-width: 2px;\n  position: relative;\n  width: 47px;\n  height: 40px;\n}\n\n.navbar-toggle:hover, .navbar-toggle:focus {\n  background-color: transparent !important;\n}\n\n.navbar-toggle span {\n  background-color: #fff !important;\n}\n\n.navbar-toggle[aria-expanded=\"true\"] {\n  transition: all .3s;\n  padding: 0px;\n  border: none;\n}\n\n.navbar-toggle[aria-expanded=\"true\"] span:nth-child(2) {\n  transform: rotate(-140deg);\n  width: 30px;\n  margin-left: -3px;\n}\n\n.navbar-toggle[aria-expanded=\"true\"] span:nth-child(3) {\n  display: none;\n}\n\n.navbar-toggle[aria-expanded=\"true\"] span:nth-child(4) {\n  transform: rotate(140deg);\n  width: 30px;\n  margin-left: -4px;\n  position: absolute;\n  top: 38%;\n}\n\nsection#block-menu-menu-menu-serempre {\n  margin: 15px 0px;\n}\n\nsection#block-menu-menu-menu-serempre .menu.nav {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n  list-style: none;\n}\n\n@media (min-width: 768px) {\n  section#block-menu-menu-menu-serempre .menu.nav {\n    justify-content: flex-end;\n    flex-direction: row;\n  }\n}\n\nsection#block-menu-menu-menu-serempre .menu.nav li .nolink {\n  display: block;\n  padding: .5rem 1rem;\n}\n\nsection#block-menu-menu-menu-serempre .menu.nav li a,\nsection#block-menu-menu-menu-serempre .menu.nav li span {\n  font-family: \"Rubik-Light\", \"Arial Narrow\", Helvetica, sans-serif;\n  font-size: 0.875rem;\n  color: #fff;\n}\n\n@media (min-width: 768px) {\n  section#block-menu-menu-menu-serempre .menu.nav li a,\n  section#block-menu-menu-menu-serempre .menu.nav li span {\n    font-size: 1rem;\n  }\n}\n\n@media (min-width: 992px) {\n  section#block-menu-menu-menu-serempre .menu.nav li a,\n  section#block-menu-menu-menu-serempre .menu.nav li span {\n    padding: 10px 25px !important;\n  }\n}\n\n@media (min-width: 992px) {\n  section#block-menu-menu-menu-serempre .menu.nav li a.active::before,\n  section#block-menu-menu-menu-serempre .menu.nav li span.active::before {\n    content: '';\n    position: absolute;\n    bottom: 5px;\n    left: 50%;\n    transform: translate3d(-50%, 0px, 0px);\n    width: 70%;\n    height: 2px;\n    border: 2px solid #fff;\n  }\n}\n\nsection#block-menu-menu-menu-serempre .menu.nav li a:hover,\nsection#block-menu-menu-menu-serempre .menu.nav li span:hover {\n  background: transparent;\n}\n\nsection#block-menu-menu-menu-serempre .menu.nav li.market a,\nsection#block-menu-menu-menu-serempre .menu.nav li.market span, section#block-menu-menu-menu-serempre .menu.nav li.buscar a,\nsection#block-menu-menu-menu-serempre .menu.nav li.buscar span {\n  display: inline-block;\n  width: 15px;\n  height: 15px;\n  background: transparent no-repeat center center;\n  background-size: contain;\n  font-size: 0px;\n  margin-top: 12px;\n}\n\nsection#block-menu-menu-menu-serempre .menu.nav li.market a,\nsection#block-menu-menu-menu-serempre .menu.nav li.market span {\n  background-image: url(\"../img/market.png\");\n}\n\nsection#block-menu-menu-menu-serempre .menu.nav li.buscar a,\nsection#block-menu-menu-menu-serempre .menu.nav li.buscar span {\n  background-image: url(\"../img/buscar.png\");\n}\n","// sass-lint:disable no-vendor-prefixes\n\n// Use the saner border-box model for all elements.\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nhtml {\n  // @include define-type-sizing();\n  // Change the default font family in all browsers (opinionated).\n  @include typeface(body);\n  @include define-type-sizing ;\n  // Prevent adjustments of font size after orientation changes in IE and iOS.\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n  // On short pages, we want any background gradients to fill the entire height\n  // of the browser.\n  min-height: 100%;\n}\n\nbody {\n  // Output a horizontal grid to help with debugging typography. The\n  // $typey-debug variable will toggle its output.\n  // @include typey-debug-grid();\n  // Remove default margin and padding.\n  font-family: $RobotoMono-Regular;\n  @include font-size('s');\n  color: color('text');\n  background-color: color('text-bg');\n  margin: 0;\n  padding: 0;\n}\n","// Embed a typeface.\n//\n// @param string $typeface\n//   A font family from the $typefaces map.\n@mixin typeface($typeface) {\n  $typeface-name: $typeface;\n  $typeface: map-get($typefaces, $typeface);\n\n  $font-family: false;\n  $letter-spacing: false;\n  $weight: false;\n  $style: false;\n  $case: false;\n\n  // Assign values to variables when $typeface is a keyed map.\n  @if type-of($typeface) == \"map\" {\n    @if map-has-key($typeface, font-family) {\n      $font-family: map-get($typeface, font-family);\n    }\n    @if map-has-key($typeface, letter-spacing) {\n      $letter-spacing: map-get($typeface, letter-spacing);\n    }\n    @if map-has-key($typeface, weight) {\n      $weight: map-get($typeface, weight);\n    }\n    @if map-has-key($typeface, style) {\n      $style: map-get($typeface, style);\n    }\n    @if map-has-key($typeface, case) {\n      $case: map-get($typeface, case);\n    }\n  }\n\n  // Assign values to variables when $typeface is shorthand.\n  @if type-of($typeface) == \"list\" {\n    @if (list-separator($typeface) == \"comma\") {\n      // This shorthand is just a list of fonts.\n      $font-family: $typeface;\n    }\n    @else {\n      @each $value in $typeface {\n        // This is a font-family.\n        @if type-of($value) == \"list\" {\n          $font-family: $value;\n        }\n        // This is a letter-spacing value.\n        @if type-of($value) == \"number\" {\n          $letter-spacing: $value;\n        }\n        // This is a font-weight value.\n        @if map-has-key($font-weight, $value) {\n          $weight: $value;\n        }\n        // This is a case value.\n        @else if type-of($value) == \"string\" and index($text-transform-values, $value) != null {\n          $case: $value;\n        }\n        // This is a style value.\n        @else if type-of($value) == \"string\" and index($font-style-values, $value) != null {\n          $style: $value;\n        }\n      }\n    }\n  }\n\n  // Output properties.\n  @if $font-family {\n    font-family: $font-family;\n  }\n  @else {\n    @error \"Typeface '#{$typeface-name}' does not have a font-family\";\n  }\n  @if $letter-spacing {\n    @if ($letter-spacing == 0) {\n      letter-spacing: 0;\n    }\n    @else {\n      letter-spacing: calculate-em-px($letter-spacing, $base-font-size);\n    }\n  }\n  @if $weight {\n    font-weight: weight($weight);\n  }\n  @if $style {\n    font-style: $style;\n  }\n  @if $case {\n    text-transform: $case;\n  }\n}\n","// Variables\n//\n// Set variables for this site before a library sets its !default value.\n//\n// Style guide: sass.variables\n\n\n// Browser support\n//\n// For older versions of browsers, some Sass relies on the `support-for()` to\n// control whether extra CSS is needed to be output. The `support-for()`\n// function and the `$support-for` variable are documented on the [support-for\n// homepage](https://github.com/JohnAlbin/support-for).\n//\n// Style guide: sass.variables.support-for\n\n// Support the same browsers as normalize.css v3.\n// Possible keys: chrome, edge, firefox, ie, opera, safari, '*'\n$support-for: (\n  ie:  11,\n  // The last 4 versions of all other browsers.\n  '*': -4,\n)!default;\n\n\n// Font faces, stacks and sizes.\n//\n// Font styling and line heights are controlled by the several variables that\n// used by mixins like `type-layout()`, `margin-top()`, and `margin-bottom()`.\n// These variable and mixins are documented on the [Typey\n// homepage](https://github.com/jptaranto/typey).\n//\n// Style guide: sass.variables.typey\n\n// The font size set on the root html element.\n$base-font-size:    16px;\n\n// The base line height determines the basic unit of vertical rhythm.\n$base-line-height:  24px;\n\n\n// The font sizes in our type hierarchy as tee shirt sizes.\n$font-size: (\n  xxxl:             43px,\n  xxl:              31px,\n  xl:               24px,\n  ll:               23px,\n  sl:               20px,\n  l:                19px,\n  o:                18px,\n  m:                $base-font-size,\n  ms:               15px,\n  s:                14px,\n  xs:               13px,\n  xxs:              12px,\n  xxxs:             11px,\n  a:                10px\n) !default;\n\n// Typey allows you to alter font weights site-wide with this map.\n$font-weight: (\n  bold:             bold,\n  medium:           500,\n  normal:           normal,\n  light:            300,\n  lighter:          lighter,\n);\n\n// The following font family declarations use widely available fonts.\n// A user's web browser will look at the comma-separated list and will\n// attempt to use each font in turn until it finds one that is available\n// on the user's computer. The final \"generic\" font (sans-serif, serif or\n// monospace) hints at what type of font to use if the web browser doesn't\n// find any of the fonts in the list.\n\n\n// Sans-serif font stacks.\n$RobotoMono-Bold:         'RobotoMono-Bold', 'Arial Narrow', Helvetica, sans-serif;\n$RobotoMono-BoldItalic:   'RobotoMono-BoldItalic', 'Arial Narrow', Helvetica, sans-serif;\n$RobotoMono-Italic:       'RobotoMono-Italic', 'Arial Narrow', Helvetica, sans-serif;\n$RobotoMono-Light:        'RobotoMono-Light', 'Arial Narrow', Helvetica, sans-serif;\n$RobotoMono-LightItalic:  'RobotoMono-LightItalic', 'Arial Narrow', Helvetica, sans-serif;\n$RobotoMono-Regular:      'RobotoMono-Regular', 'Arial Narrow', Helvetica, sans-serif;\n$Rubik-Black:             'Rubik-Black', 'Arial Narrow', Helvetica, sans-serif;\n$Rubik-Bold:              'Rubik-Bold', 'Arial Narrow', Helvetica, sans-serif;\n$Rubik-Regular:           'Rubik-Regular', 'Arial Narrow', Helvetica, sans-serif;\n$Rubik-Light:             'Rubik-Light', 'Arial Narrow', Helvetica, sans-serif;\n\n\n\n// Monospace font stacks.\n// For an explanation of why \"sans-serif\" is at the end of this list, see\n// http://meyerweb.com/eric/thoughts/2010/02/12/fixed-monospace-sizing/\n$menlo:           Menlo, 'DejaVu Sans Mono', 'Ubuntu Mono', Courier, 'Courier New', monospace, sans-serif;\n\n// The font faces you specify in the $typefaces map can be used in the\n// typeface() mixin.\n$typefaces: (\n  body: (\n    font-family: $RobotoMono-Regular,\n  ),\n  monospace: (\n    font-family: $menlo,\n  ),\n  compact: (\n    font-family: $RobotoMono-Regular,\n    weight: 900,\n    case: uppercase,\n    // We could also specify the following property:\n    // letter-spacing: .5px,\n  ),\n);\n\n// Output a horizontal grid to help with debugging typography.\n$typey-debug: false;\n\n// The length unit in which to output font size and margin values.\n// Supported values: px, em, rem.\n$base-unit:         'rem';\n\n// px fallbacks for rem units are needed for IE 8 and earlier.\n$rem-fallback:      false;\n\n$auto-print-sizing: false;\n\n$line-height-method: ratio;\n\n// Breakpoints\n//\n// Use the `respond-to()` mixin to use named breakpoints. Documentation is\n// available in the [Breakpoint wiki\n// pages](https://github.com/at-import/breakpoint/wiki/Respond-To).\n//\n// Style guide: sass.variables.breakpoints\n\n@include add-breakpoint(xxxs, (333px, 'no-query' true));\n@include add-breakpoint(xxs,  (444px, 'no-query' true));\n@include add-breakpoint(xs,   (555px, 'no-query' true));\n@include add-breakpoint(s,    (666px, 'no-query' true));\n@include add-breakpoint(m,    (768px, 'no-query' true));\n@include add-breakpoint(l,    (888px, 'no-query' true));\n@include add-breakpoint(xl,   (992px, 'no-query' true));\n@include add-breakpoint(xxl,  (1111px));\n@include add-breakpoint(xxxl, (1200px));\n\n// Output media queries where the above px are converted to ems.\n// @include breakpoint-set('to ems', true);\n","// Define defaults (use this in the HTML element).\n//\n// @param number $size\n//   (optional) The font-size. Use to set to anything other than $base-font-size.\n// @param number $line-height\n//   (optional) The line-height. Use to set to anything other than $base-line-height.\n//   Set to a ratio when $line-height-as-ratio is true. Will default to $base-line-height-ratio.\n//   Set to false if you do not want to change a ratio of line-height already set.\n@mixin define-type-sizing($size: $base-font-size, $line-height: $base-line-height) {\n  @if $base-unit == rem or $base-unit == em {\n    font-size: $size / $browser-font-size * 100%;\n  }\n  @if $base-unit == px {\n    font-size: $size;\n  }\n\n  @if $line-height != false {\n    @if $line-height-method == \"ratio\" {\n      @if $line-height == $base-line-height {\n        $line-height: $base-line-height-ratio;\n      }\n      line-height: $line-height;\n    }\n    @else {\n      @if $base-unit == rem or $base-unit == em {\n        // In the html element, rem means relative to browser default font size; em means relative to html's font size.\n        line-height: calculate-em-px($line-height, $size);\n      }\n      @if $base-unit == px {\n        line-height: $line-height;\n      }\n    }\n  }\n\n  @if $auto-print-sizing == true {\n    @if $base-unit == rem or $base-unit == em {\n      @media print {\n        font-size: $print-font-size;\n      }\n    }\n    @else {\n      @warn \"As you are not using a relative base unit (rem or em) automatic print media sizing will not work. Set $auto-print-sizing to false to hide this warning\"\n    }\n  }\n}\n","// The browser font size default. No need to change this.\n// Allowed units: px\n$browser-font-size:        16px !default;\n\n// Allowed units: rem, em or px\n$base-unit:                rem !default;\n\n// The base font size will be used for most calculations involving font-size.\n// Allowed units: px\n$base-font-size:           16px !default;\n\n// The base line height will be used for most calculations involving height.\n// Allowed units: px\n$base-line-height:         24px !default;\n\n// The method to calculate line-height. Allowed values: rhythm or ratio.\n// Rhytm uses a vertical rhythm approach where line-height is specified as\n// a multiple of the $base-line-height.\n// Ratio uses a ratio approach where line-height is specified as a ratio\n// of the elements font-size.\n$line-height-method:       rhythm !default;\n\n// The default ratio of line-height to font-size.\n$base-line-height-ratio:   1.5 !default;\n\n// By default we will provide fallbacks when rem is the base unit.\n$rem-fallback:             true !default;\n\n// By default, when rem or em are the base unit we will output a print suitable\n// media query with the define-type-sizing() mixin. This will take care of all\n// print media type sizing effortlessly.\n$auto-print-sizing:        true !default;\n\n// The pt font-size to be used with the print media query when\n// $auto-print-sizing is enabled.\n// Allowed units: pt\n$print-font-size:          12pt !default;\n\n// Default font sizes\n// Once you redefine the $font-size map it will overwrite all sizes here.\n// Allowed units: px\n$font-size: (\n  xxxl:                    60px,\n  xxl:                     46px,\n  xl:                      32px,\n  l:                       24px,\n  m:                       16px,\n  s:                       14px,\n  xs:                      12px\n) !default;\n\n// Default font weights\n// This map and accompanying function help provide granular control over\n// setting and retrieving static font weights.\n$font-weight: (\n  bold:                    700,\n  normal:                  400,\n  lighter:                 200\n) !default;\n\n// Declare typefaces\n// These can use any key you like, and allow you to set global letter-spacing,\n// weight and case for font-families. You can then use the\n// font-family mixin to embed your font families anywhere you like.\n//\n// Each key in the $typefaces map can either be a keyed map of settings\n// using any combination of the keys below, or it can be a shorthand list\n// of each property value. When using shorthand it doesn't matter what order\n// each value is arranged in, but best practice is to do it in the order:\n// [font-family] [letter-spacing] [weight] [case]\n//\n// @setting list font-family\n//   Any standard CSS font-family. Use typey pre-written stacks or roll your own.\n// @setting number letter-spacing\n//   CSS letter-spacing. Specified as a px value when font-size is the\n//   $base-font-size.\n// @setting string weight\n//   A key from the $font-weight map. Only specify this if you want a consistant\n//   font-weight used accross the board with this typeface.\n// @setting string case\n//   A value for CSS text-transform. Only specify this if you want a consistant\n//   case used accross the board with this typeface.\n$typefaces: () !default;\n\n// Declare typestyles\n// These can use any key you like, and allow you to set an easily reusable type\n// style. They can be as simple as a font-size and line-height, or can go on\n// to encompass a full range of css type properties.\n//\n// Each key in the $typestyles map can either be a keyed map of settings\n// using any combination of the keys below, or it can be a shorthand list\n// of each property value. When using shorthand for $typestyles, the first value\n// must always be font-size. After that it doesn't matter what order each value\n// is arranged in, but best practice is to do it in the order:\n// [font-size] [line-height] [weight] [case]\n//\n// @setting number|string font-size\n//   A size from the $font-size map or px value to be converted\n// @setting number $x line-height\n//   Multiple of line height, ratio or px value to be converted.\n// @setting string weight\n//   A key from the $font-weight map.\n// @setting string case\n//   A value for CSS text-transform.\n$typestyles: () !default;\n\n// Debug grid\n// Shows horizontal lines for each elements line height.\n$typey-debug:              false !default;\n\n// Debug grid coloring\n$typey-debug-color:        #4affff !default;\n\n// Lets store the allowed values for text-transform and font-style so we can\n// make shorthand work a little better.\n$text-transform-values: (\n  lowercase,\n  uppercase,\n  capitalize\n) !default;\n\n$font-style-values: (\n  normal,\n  italic,\n  oblique\n) !default;\n\n// Warnings for $base-unit.\n@if $base-unit != px and $base-unit != rem and $base-unit != em {\n  @error \"$base-unit must be one of the following unit types: rem, em or px\";\n}\n\n// Warnings for $base-font-size and $base-line-height.\n@if unit($base-font-size) != px {\n  @error \"$base-font-size must be in px\";\n}\n@if unit($base-line-height) != px {\n  @error \"$base-line-height must be in px\";\n}\n\n// Warnings for $print-font-size.\n@if unit($print-font-size) != pt {\n  @error \"$print-font-size must be in pt\";\n}\n\n// Warnings for $font-size.\n@each $key, $size in $font-size {\n  @if unit($size) != px {\n    @error \"Size '#{$key}' in $font-size map is not specified in px\";\n  }\n}\n\n// Warnings for $font-weight.\n$typey-text-transform-properties: none capitalize uppercase lowercase initial inherit;\n@each $property in $typey-text-transform-properties {\n  @if map-has-key($font-weight, $property) {\n    @warn \"'#{$property}' used in $font-weight map is a potential value of the text-transform property and will conflict when using typey shorthand\";\n  }\n}\n\n// Warnings for $typefaces.\n@each $key, $typeface in $typefaces {\n  @if type-of($typeface) != \"map\" and type-of($typeface) != \"list\" {\n    @error \"Typeface '#{$key}' in $typefaces map must be a keyed map or a shorthand list in the format: [font-family] [letter-spacing] [weight] [case]\";\n  }\n}\n\n// Warnings for $typestyles.\n@each $key, $typestyle in $typestyles {\n  @if type-of($typestyle) == \"list\" {\n    @each $value in $typestyle {\n      @if index($typestyle, $value) == 1 {\n        $allowed-types: \"font-size\", \"px\";\n        $type: typey-check-value($value);\n        @if index($allowed-types, $type) == null {\n          @error \"Incorrect shorthand format used in '#{$key}' in $typestyles map: [font-size] must appear first\";\n        }\n      }\n    }\n  }\n}\n","// Define font-size (with fallback)\n//\n// @param number|string $size\n//   A size from the $font-size map or px value to be converted\n// @param number|string $context\n//   (optional) Only used if em is the $base-unit. The value of the elements/parents\n//   font-size if it differs from $base-font-size. Specified as a t-shirt size or\n//   value in px.\n@mixin font-size($size, $context: $base-font-size) {\n  $allowed-types: \"font-size\", \"px\";\n  $type: typey-validator($size, $allowed-types);\n  @if $base-unit == rem {\n    @if $rem-fallback == true {\n      @if $type == \"font-size\" {\n        $map-size: map-get($font-size, $size);\n        font-size: $map-size;\n      }\n      @if $type == \"px\" {\n        font-size: $size;\n      }\n    }\n  }\n  font-size: font-size($size, $context);\n}\n","// Output a number in the $base-unit.\n//\n// @param number $number\n//   The number (without unit) to output.\n//\n// @return number\n//   The number with the base unit\n@function typey-output-in-base-unit($number) {\n  @if $number == 0 {\n    @return 0;\n  }\n  @if $base-unit == rem {\n    @return $number * 1rem;\n  }\n  @if $base-unit == px {\n    @return $number * 1px;\n  }\n  @if $base-unit == em {\n    @return $number * 1em;\n  }\n}\n\n// Output a number in a chosen unit.\n//\n// @param number $number\n//   The number (without unit) to output.\n// @param string $unit\n//   (optional) The unit to output, either em, px or rem.\n//\n// @return number\n//   The number with the base unit\n@function typey-output-in-unit($number, $unit: $base-unit) {\n  @if $number == 0 {\n    @return 0;\n  }\n  @if $unit == rem {\n    @return $number * 1rem;\n  }\n  @if $unit == px {\n    @return $number * 1px;\n  }\n  @if $unit == em {\n    @return $number * 1em;\n  }\n}\n\n// Remove the unit from a number.\n//\n// @param number $number\n//   The number (with unit) to convert. Allowed units: any\n//\n// @return number\n//   The number without the unit.\n@function typey-strip-unit($number) {\n  @if type-of($number) == \"number\" and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n  @return $number;\n}\n","// sass-lint:disable indentation, no-color-keywords\n\n// Colors\n//\n// Use the `color()` function to add colors to CSS properties. To learn more,\n// [read the Chroma documentation](http://johnalbin.github.io/chroma/).\n//\n// Markup: chroma.twig\n//\n// Weight: -1\n//\n// Style guide: sass.colors\n\n// Define the default color scheme's color names.\n$chroma: define-default-color-scheme('branding', 'The site\\'s main colors. Can be used to define colors in other color schemes.');\n\n$chroma: add-colors((\n  transparent:            transparent,\n  // Primary\n  black:                  #000,\n  black-secundary:        #585863,\n  white:                  #fff,\n  grey-dark:              #484851, // #666\n  'grey':                 #484851,\n  grey-light:             #f4f1f1, // #ccc\n  grey-secundary:         #c6c6c6,\n  grey-extra-light:       #eee, // ('black' lighten 93.33%)\n  red:                    #ed1c24,\n  red-dark:               #93141a,\n  gray-multimedia:        #f5f1f2,\n  gray-menu:              #696969,\n  gray-menu-soy:          #a9a9a9,\n  menu-gray-nivel2:       #c8c8ca,\n\n\n  // Custom\n  orange:                  #ff8827,\n  orange-primary:          #e34d1f,\n\n\n  // Secundary\n  // coffee:                 #816853,\n  // coffee-light:           #ca946a,\n  // green:                  #009f2a,\n  green-Primary:           #3d706e,\n  blue:                    #4585ff,\n  blue-light:              #46b9c0,\n  yellow:                  #ffea00,\n  yellow-menu:             #FFF200,\n  yellow-menu-mobile:      #ead134,\n  yellow-defaul:           #ebba00,\n  fucsia:                  #b600eb,\n\n  Yellow-secundary:        #FDBD2C,\n\n));\n\n// Define color names for functional uses.\n$chroma: define-color-scheme('functional', 'Colors used by functional parts of the design.');\n$chroma: add-colors('functional', (\n  // Colors used in the main content area.\n  text:                   'grey-dark',\n  text-bg:                'white',\n\n  link:                   'grey-dark',\n  link-visited:           'red-dark',\n  link-active:            'grey-dark',\n\n  border:                 'grey-light',\n\n  autocomplete:           'text',\n  autocomplete-bg:        'text-bg',\n  autocomplete-select:    'white',\n  autocomplete-select-bg: 'blue',\n\n  body-bg:                'text-bg',\n\n  button:                 'text',\n  button-disabled:        'grey',\n\n  fieldset-summary:       'grey',\n  form-error:             'red',\n\n  mark-highlight:         'red',\n  mark-bg:                'yellow',\n\n  menu-active:            'text',\n\n  // preview-bg:             ('yellow' lighten 43%),\n\n  progress-bar:           'blue',\n  progress-bar-bg:        'grey-light',\n  progress-bar-border:    'grey-dark',\n\n  resizable-grippie:      'grey-extra-light',\n\n  row-stripe:             'grey-extra-light',\n  row-disabled:           'grey-light',\n\n  skip-link:              'white',\n  skip-link-bg:           'grey-dark',\n\n  status:                 'blue',\n  // status-bg:              (status lighten 62%),\n  status-highlight:       text,\n  warning:                text,\n  // warning-bg:             ('yellow' lighten 45%),\n  warning-border:         'yellow',\n  error:                  'red',\n  // error-bg:               (error lighten 57%),\n\n  tabs-border:            'border',\n  tabs-bg:                'text-bg',\n  tab:                    'text',\n  tab-text-shadow:        'white',\n  // tab-bg:                 ('grey-light' lighten 6.66%),\n  tab-secondary:          'grey-dark',\n\n  // table-drag:             ('yellow' lighten 43%),\n  // table-select:           ('yellow' lighten 47%),\n\n  watermark:              'grey-extra-light',\n));\n\n$chroma-active-scheme: 'functional';\n","// HTML5 display definitions\n// ==========================================================================\n\n// Add the correct display in IE <10.\n// Add the correct display in Edge, IE, and Firefox for `details` or `summary`.\n// Add the correct display in IE for `main`.\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nmain,\nmenu,\nnav,\nsection,\nsummary {\n  display: block;\n}\n\n// Add the correct display in IE <10.\naudio,\ncanvas,\nprogress,\nvideo {\n  display: inline-block;\n}\n\n// Add the correct display and remove excess height in iOS 4-7.\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n// Add the correct vertical alignment in Chrome, Firefox, and Opera.\nprogress {\n  vertical-align: baseline;\n}\n\n// Add the correct display in IE <11, Safari <8, and Firefox <22.\ntemplate,\n[hidden] {\n  display: none;\n}\n","// Links\n//\n// Hyperlinks are used to allow the user to navigate to other resources or to\n// download a resource.\n//\n// The order of link states are based on Eric Meyer's article:\n// http://meyerweb.com/eric/thoughts/2007/06/11/who-ordered-the-link-states\n//\n// :visited - A link that has already been visited.\n// :hover   - A link that is being hovered over.\n// :focus   - A link that has been given keyboard focus.\n// :active  - A link that is being actively clicked.\n//\n// Markup: links-a.twig\n//\n// Style guide: base.link\n\na,\n%link {\n  color: color(link);\n  // Remove gaps in links underline in iOS 8+ and Safari 8+.\n  -webkit-text-decoration-skip: objects;\n}\n\n// Any element can receive focus, but only links can be visited, so we can\n// safely lower this selector's specificity. This also ensures visited links\n// with additional styles won't have their styles overridden.\n// :visited {\n//   color: color(link-visited);\n// }\n\n// a:hover,\n// a:focus {\n//   // Add your styles.\n// }\n\na:active {\n  color: color(link-active);\n\n  &:not(.button) {\n    // Remove the gray background on active links in IE 10.\n    background-color: transparent;\n  }\n}\n\n// Remove the outline on focused links when they are also active or hovered\n// in all browsers (opinionated).\na:active,\na:hover {\n  outline-width: 0;\n}\n\n@media print {\n  // Underline all links.\n  :link,\n  :visited {\n    text-decoration: underline;\n  }\n\n  // Add visible URL after links.\n  a[href]:after {\n    content: ' (' attr(href) ')';\n    font-weight: normal;\n    font-size: $base-font-size;\n    text-decoration: none;\n  }\n\n  // Only display useful links.\n  a[href^='javascript:']:after,\n  a[href^='#']:after {\n    content: '';\n  }\n}\n","// Headings\n//\n// All HTML headings, `<h1>` through `<h6>`, are available. `%h1` through `%h6`\n// classes are also available, for when you want to match the font styling of a\n// heading but still want your text to be displayed inline.\n//\n// Markup: headings-h.twig\n//\n// Style guide: base.headings\n\n// Address variable `h1` font-size and margin within `section` and `article`\n// contexts in Firefox 4+, Safari, and Chrome.\nh1,\n%h1 {\n  // Set the font-size and line-height while keeping a proper vertical rhythm.\n  @include type-layout(xxl, 2);\n\n  // Set 1 unit of vertical rhythm on the top and bottom margins.\n  @include margin-top(1, xxl);\n  @include margin-bottom(1, xxl);\n}\n\nh2,\n%h2 {\n  @include type-layout(xl, 1.5);\n  @include margin-top(1, xl);\n  @include margin-bottom(1, xl);\n}\n\nh3,\n%h3 {\n  @include type-layout(l, 1.5);\n  @include margin-top(1, l);\n  @include margin-bottom(1, l);\n}\n\nh4,\n%h4 {\n  @include type-layout(m, 1);\n  @include margin-top(1, m);\n  @include margin-bottom(1, m);\n}\n\nh5,\n%h5 {\n  @include type-layout(s, 1);\n  @include margin-top(1, s);\n  @include margin-bottom(1, s);\n}\n\nh6,\n%h6 {\n  @include type-layout(xs, 1);\n  @include margin-top(1, xs);\n  @include margin-bottom(1, xs);\n}\n","// Define line-height (with fallback).\n//\n// @param number $x\n//   Multiple of line height to be used or px value to be converted.\n// @param number|string $context\n//   (optional) Only used if em is the $base-unit. The value of the\n//   elements/parents font-size if it differs from $base-font-size.\n//   Specified as a t-shirt size or value in px.\n@mixin line-height($x, $context: $base-font-size) {\n  $allowed-types: \"multiplier\", \"px\";\n  $type: typey-validator($x, $allowed-types);\n  @if $base-unit == rem and $line-height-method == \"rhythm\" {\n    @if $rem-fallback == true {\n      @if $type == \"multiplier\" {\n        line-height: $x * $base-line-height;\n      }\n      @if $type == \"px\" {\n        line-height: $x;\n      }\n    }\n  }\n  line-height: line-height($x, $context);\n}\n","// Define spacing (with fallbacks).\n//\n// @param string $type\n//   The type of spacing: margin, padding, margin-top, etc.\n// @param number|list|string $spacing\n//   Multiple of $base-line-height to be used or px value to be converted.\n//   Can be a SASS list using the same parameters as the CSS margin property:\n//   i.e. top right bottom left, 1 0 2 0.\n//   Can also be the string \"auto\" when used as margin.\n// @param number|string $context\n//   (optional) Only used if em is the $base-unit. The value of the elements/parents\n//   font-size if it differs from $base-font-size. Specified as a t-shirt size or\n//   value in px.\n@mixin spacing($property, $spacing, $context: $base-font-size) {\n  $allowed-types: \"multiplier\", \"px\", \"list\";\n  $type: typey-validator($spacing, $allowed-types);\n\n  $px-fallback-list: ();\n  $converted-list: ();\n\n  @each $x in $spacing {\n    @if $base-unit == rem {\n      $allowed-types: \"multiplier\", \"px\", \"auto\";\n      $type: typey-validator($x, $allowed-types);\n      @if $type == \"multiplier\" {\n        $spacing: $x * $base-line-height;\n        $px-fallback-list: join($px-fallback-list, $spacing, $separator: space);\n      }\n      @if $type == \"px\" {\n        $px-fallback-list: join($px-fallback-list, $x, $separator: space);\n      }\n      @if $type == \"auto\" {\n        $px-fallback-list: join($px-fallback-list, $x, $separator: space);\n      }\n    }\n    $spacing: spacing($x, $context);\n    $converted-list: join($converted-list, $spacing, $separator: space);\n  }\n\n  @if $base-unit == rem {\n    @if $rem-fallback == true {\n      #{$property}: $px-fallback-list;\n    }\n  }\n  #{$property}: $converted-list;\n}\n\n// Wrapper mixins for various spacing properties.\n// These can be used to provide easily sized spacing in the base unit.\n//\n// @param number|list|string $x\n//   Multiple of $base-line-height to be used or px value to be converted.\n//   Can be a SASS list using the same parameters as the CSS margin property:\n//   i.e. top right bottom left, 1 0 2 0.\n//   Can also be the string \"auto\" when used as margin.\n// @param number|string $context\n//   (optional) Only used if em is the $base-unit. The value of the elements/parents\n//   font-size if it differs from $base-font-size. Specified as a t-shirt size or\n//   value in px.\n@mixin margin($x, $context: $base-font-size) {\n  @include spacing(margin, $x, $context);\n}\n@mixin margin-top($x, $context: $base-font-size) {\n  @include spacing(margin-top, $x, $context);\n}\n@mixin margin-bottom($x, $context: $base-font-size) {\n  @include spacing(margin-bottom, $x, $context);\n}\n@mixin margin-left($x, $context: $base-font-size) {\n  @include spacing(margin-left, $x, $context);\n}\n@mixin margin-right($x, $context: $base-font-size) {\n  @include spacing(margin-right, $x, $context);\n}\n@mixin padding($x, $context: $base-font-size) {\n  @include spacing(padding, $x, $context);\n}\n@mixin padding-top($x, $context: $base-font-size) {\n  @include spacing(padding-top, $x, $context);\n}\n@mixin padding-bottom($x, $context: $base-font-size) {\n  @include spacing(padding-bottom, $x, $context);\n}\n@mixin padding-left($x, $context: $base-font-size) {\n  @include spacing(padding-left, $x, $context);\n}\n@mixin padding-right($x, $context: $base-font-size) {\n  @include spacing(padding-right, $x, $context);\n}\n","// Text-level semantics\n//\n// The elements in this section give semantics to inline text.\n//\n// Weight: 1\n//\n// Style guide: base.text\n\n// Abbreviation / Acroynym\n//\n// The `<abbr>` element makes the meanings of abbreviations and acronyms visible\n// on hover.\n//\n// Markup: text-abbr.twig\n//\n// Style guide: base.text.abbr\n\nabbr[title] {\n  // Remove the bottom border in Firefox <40.\n  border-bottom: 0;\n  // Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n  text-decoration: underline;\n  text-decoration: underline dotted;\n\n  @media print {\n    // Add visible title after abbreviations.\n    &:after {\n      content: ' (' attr(title) ')';\n    }\n  }\n}\n\n// Bold\n//\n// The `<strong>` element or the `<b>` element is for emphasizing a snippet of\n// text with a heavier font-weight.\n//\n// Feel free to use `<b>` in HTML5. `<b>` is meant to highlight words or phrases\n// without conveying additional importance.\n//\n// Markup: text-b.twig\n//\n// Weight: -1\n//\n// Style guide: base.text.b\n\n// Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n\nb,\nstrong {\n  font-weight: inherit;\n}\n\n// sass-lint:disable no-mergeable-selectors\nstrong,\nb {\n  // Add the correct font weight in Chrome, Edge, and Safari.\n  font-weight: bolder;\n}\n// sass-lint:enable no-mergeable-selectors\n\n// Code\n//\n// The `<code>` element represents a fragment of computer code. The `<var>`\n// element represents a variable. The `<samp>` element represents (sample)\n// output from a program or computing system. The `<kbd>` element represents\n// user input (typically keyboard input.)\n//\n// Markup: text-code.twig\n//\n// Style guide: base.text.code\n\n%monospace,\ncode,\nkbd,\nsamp,\nvar {\n  // Correct the inheritance and scaling of font size in all browsers.\n  // The font-family value ends with \", serif\".\n  @include typeface(monospace);\n  // Correct the odd `em` font sizing in all browsers.\n  font-size: 1em;\n}\n\n// Definition\n//\n// The `<dfn>` element represents the defining instance of a term.\n//\n// Markup: text-dfn.twig\n//\n// Style guide: base.text.dfn\n\ndfn {\n  // Add the correct font style in Android <4.4.\n  font-style: italic;\n}\n\n// Marked text\n//\n// The `<mark>` element highlights a run of text due to its relevance in another\n// context.\n//\n// Markup: text-mark.twig\n//\n// Style guide: base.text.mark\n\nmark {\n  // Add the correct background and color in IE <10.\n  background-color: color(mark-bg);\n  color: color(text);\n}\n\n// Small text\n//\n// For de-emphasizing inline or blocks of text, use the `<small>` element to set\n// text at 80% the size of the parent.\n//\n// Markup: text-small.twig\n//\n// Style guide: base.text.small\n\nsmall {\n  // Add the correct font size in all browsers.\n  @include font-size(s);\n}\n\n// Superscript / Subscript\n//\n// The `<sup>` element represents a superscript and the `<sub>` element\n// represents a subscript.\n//\n// Markup: text-sub.twig\n//\n// Style guide: base.text.sub\n\nsub,\nsup {\n  // Prevent `sub` and `sup` elements from affecting the line height in\n  // all browsers.\n  @include font-size(xs);\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -.25em;\n}\n\nsup {\n  top: -.5em;\n}\n","// Embedded content\n//\n// Weight: 2\n//\n// Style guide: base.embedded\n\n// Image\n//\n// An `<img>` element represents an image.\n//\n// Markup: embedded-img.twig\n//\n// Style guide: base.embedded.img\n\nimg {\n  // Remove the border on images inside links in IE <11.\n  border-style: none;\n  @if support-for(ie, 7) {\n    // Improve image quality when scaled in IE 7.\n    // sass-lint:disable no-vendor-prefixes\n    -ms-interpolation-mode: bicubic;\n  }\n}\n\nimg,\nsvg {\n  // Suppress the space beneath the baseline\n  // vertical-align: bottom;\n\n  // Responsive images\n  max-width: 100%;\n  height: auto;\n}\n\n// Scalable vector\n//\n// A `<svg>` element represents an image encoded as a Scalable Vector Graphic.\n//\n// Markup: embedded-svg.twig\n//\n// Style guide: base.embedded.svg\n\nsvg:not(:root) {\n  // Hide the overflow in IE.\n  overflow: hidden;\n}\n","// Tables\n//\n// The `<table>` element displays tabular data in rows, columns, and cells.\n//\n// Markup: tables-table.twig\n//\n// Weight: 1\n//\n// Style guide: base.table\n\ntable {\n  // Add vertical rhythm margins.\n  @include margin(1 0);\n  // Remove most spacing between table cells.\n  border-collapse: collapse;\n  border-spacing: 0;\n  // Prevent cramped-looking tables\n  width: 100%;\n}\n\ntd,\nth {\n  // Remove most spacing between table cells.\n  padding: 0;\n}\n","/*\n//------------------------------------------------------------------------------\n// Home Views Welcome\n//------------------------------------------------------------------------------\n*/\n\n.view-welcome {\n  position: relative;\n  .Banner-welcome {\n    .views-field-field-baner-desktop {\n      display: none;\n      @include respond-to(s) {\n        display: block;\n      }\n    }\n    .views-field-field-banner-mobil {\n      @include respond-to(s) {\n        display: none;\n      }\n    }\n    .Banner-box {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      max-width: 700px;\n      transform: translate3d(-50%, -50%, 0px);\n      @include respond-to(xl) {\n        max-width: 700px;\n      }\n      p {\n        font-family: $Rubik-Regular;\n        @include font-size(m);\n        color: rgb(255, 255, 255);\n        text-align: center;\n        @include respond-to(xl) {\n          @include font-size(xl);\n        }\n      }\n      h1 {\n        font-family: $Rubik-Black;\n        color: rgb(255, 255, 255);\n        line-height: 0.93;\n        text-transform: uppercase;\n        text-align: center;\n        @include respond-to(m) {\n          @include font-size(xl);\n        }\n        @include respond-to(l) {\n          @include font-size(xxxl);\n        }\n        @include respond-to(xl) {\n          font-size: 50px;\n        }\n        @include respond-to(xxxl) {\n          font-size: 80px;\n        }\n      }\n      .views-field-view-node {\n        a {\n          width: 100%;\n          display: block;\n          font-family: $Rubik-Regular;\n          @include font-size(s);\n          color: color('white');\n          text-align: center;\n          text-transform: uppercase;\n          line-height: 1.2;\n          padding: 1.0em .7em;\n          border: 3px solid color('white');\n          max-width: 150px;\n          margin: 0px auto;\n        }\n      }\n    }\n  }\n}","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","/*\n//------------------------------------------------------------------------------\n// Home story about\n//------------------------------------------------------------------------------\n*/\n\n.view-story-about-us {\n  margin: 150px 0px;\n  .title {\n    p {\n      @include font-size(xl);\n      font-family: $RobotoMono-Regular;\n      color: #333333;\n      text-transform: uppercase;\n      line-height: 1.2;\n      text-align: center;\n    }\n  }\n  .sub-titulo {\n    h2 {\n      @include font-size(40px);\n      font-family: $Rubik-Black;\n      color: #333333;\n      text-transform: uppercase;\n      line-height: 1.2;\n      text-align: center;\n    }\n  }\n  .descripcions {\n    @include font-size(ms);\n    font-family: $RobotoMono-Regular;\n    color: #999999;\n    line-height: 1.6;\n    text-align: center;\n    margin: 51px 0px;\n  }\n  .views-row {\n    max-width: 450px;\n    @include respond-to(m) {\n      max-width: initial;\n    }\n  }\n  .wrapper-img {\n    position: relative;\n    margin-bottom: 15px;\n    .views-field-field-imagen-layout {\n      .field-content {\n        width: 100%;\n        img {\n          width: 100%;\n        }\n      }\n    }\n    .wrapper-box {\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      transform: translate3d(-50%, -50%, 0px);\n      z-index: -1;\n      .icons-layout {\n        img {\n          margin: 0 auto;\n        }\n      }\n      .text-layout {\n        @include font-size(o);\n        font-family: $Rubik-Black;\n        color: color('white');\n        text-transform: uppercase;\n        line-height: 1.2;\n        text-align: center;\n      }\n    }\n    &:hover {\n      box-shadow: -16px 16px 7px rgba(0, 0, 0, 0.2);\n      &::before {\n        content: '';\n        position: absolute;\n        top: 0px;\n        left: 0px;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(23, 156, 215, 0.71);\n        z-index: 1;\n        transform: scale(1.05,1.05);\n        // transition: all 0.45s ease-in-out;\n      }\n      .views-field-field-imagen-layout {\n        img {\n          transform: scale(1.05,1.05);\n          transition: all 0.25s ease-in-out;\n        }\n      }\n      .wrapper-box {\n        z-index: 1;\n      }\n    }\n  }\n}","/*\n//------------------------------------------------------------------------------\n// Home Views Facts\n//------------------------------------------------------------------------------\n*/\n.view-facts {\n  background-color: #009ddf;\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: 0px;\n    .views-row {\n      flex: 1 1 50%;\n      list-style: none;\n      padding: 0px;\n\n      padding-top: 35px;\n      padding-bottom: 35px;\n      @include respond-to(xl) {\n        flex: 1 1 0px;\n        border-right: 1px solid #4dbbe9;\n        border-left: 1px solid #4dbbe9;\n      }\n      .views-field-name {\n        @include font-size(ll);\n        font-family: $Rubik-Black;\n        color: rgb(255, 255, 255);\n        text-transform: uppercase;\n        line-height: 1.2;\n        text-align: center;\n        margin-bottom: 5px;\n        @include respond-to(m) {\n          @include font-size(xxl);\n        }\n        @include respond-to(xl) {\n          @include font-size(72px);\n        }\n      }\n      .views-field-description {\n        @include font-size(s);\n        font-family: $Rubik-Regular;\n        color: rgb(255, 255, 255);\n        text-transform: uppercase;\n        line-height: 1.2;\n        text-align: center;\n      }\n    }\n  }\n}","/*\n//------------------------------------------------------------------------------\n// Menu\n//------------------------------------------------------------------------------\n*/\nbody.navbar-is-fixed-top {\n  padding: 0px !important;\n}\n\n.main-container.container {\n  width: 100% !important;\n  padding: 0px !important;\n}\n\n.navbar-default {\n  background-color: transparent;\n  border: none;\n  margin: 0px;\n}","/*\n//------------------------------------------------------------------------------\n// Menu\n//------------------------------------------------------------------------------\n*/\n\n.navbar-collapse.in {\n  background-color: #494a4a5c;\n  @include respond-to(m) {\n    background-color: transparent;\n  }\n}\n\n// |--- Enlace ---|\n.navbar-header {\n  background-color: #494a4a5c;\n  @include respond-to(m) {\n    background-color: transparent;\n  }\n  .navbar-brand {\n    height: 40px;\n    padding: 10px 15px;\n    font-family: $Rubik-Light;\n    line-height: 1.2;\n    color: color('white');\n  }\n}\n\n// |---Button Mobil---|\n.navbar-toggle {\n  border-radius: 0px;\n  border-width: 2px;\n  position: relative;\n  width: 47px;\n  height: 40px;\n  &:hover,\n  &:focus {\n    background-color: transparent !important;\n  }\n  span {\n    background-color: color('white') !important;\n  }\n  &[aria-expanded=\"true\"]{\n    transition: all .3s;\n    padding: 0px;\n    border: none;\n    span:nth-child(2) {\n      transform: rotate(-140deg);\n      width: 30px;\n      margin-left: -3px;\n    }\n    span:nth-child(3) {\n      display: none\n    }\n    span:nth-child(4) {\n      transform: rotate(140deg);\n      width: 30px;\n      margin-left: -4px;\n      position: absolute;\n      top: 38%;\n    }\n  }\n}\n\n// |--- Menu ---|\nsection#block-menu-menu-menu-serempre {\n  margin: 15px 0px;\n  .menu.nav {\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    list-style: none;\n    // background-color: red;\n    @include respond-to(m) {\n      justify-content: flex-end;\n      flex-direction: row\n    }\n    li {\n      .nolink {\n        display: block;\n        padding: .5rem 1rem;\n      }\n      a,\n      span {\n        font-family: $Rubik-Light;\n        @include font-size(s);\n        color: color('white');\n        @include respond-to(m) {\n          @include font-size(m);\n        }\n        @include respond-to(xl) {\n          padding: 10px 25px !important;\n        }\n        &.active::before {\n          @include respond-to(xl) {\n            content: '';\n            position: absolute;\n            bottom: 5px;\n            left: 50%;\n            transform: translate3d(-50%, 0px, 0px);\n            width: 70%;\n            height: 2px;\n            border: 2px solid color('white');\n          }\n        }\n        &:hover {\n          background: transparent;\n        }\n      }\n      &.market,\n      &.buscar {\n        a,\n        span {\n          display: inline-block;\n          width: 15px;\n          height: 15px;\n          background: transparent no-repeat center center;\n          background-size: contain;\n          font-size: 0px;\n          margin-top: 12px;\n        }\n      }\n      &.market {\n        a,\n        span {\n          background-image: url('../img/market.png');;\n        }\n      }\n      &.buscar {\n        a,\n        span {\n          background-image: url('../img/buscar.png');\n        }\n      }\n    }\n  }\n}"]}